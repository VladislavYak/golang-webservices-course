// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/domain/auth/auth.go
//
// Generated by this command:
//
//	mockgen -source pkg/domain/auth/auth.go -destination mocks/auth_repository_mock.go -package mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	time "time"

	gomock "go.uber.org/mock/gomock"
)

// MockAuthRepository is a mock of AuthRepository interface.
type MockAuthRepository struct {
	ctrl     *gomock.Controller
	recorder *MockAuthRepositoryMockRecorder
	isgomock struct{}
}

// MockAuthRepositoryMockRecorder is the mock recorder for MockAuthRepository.
type MockAuthRepositoryMockRecorder struct {
	mock *MockAuthRepository
}

// NewMockAuthRepository creates a new mock instance.
func NewMockAuthRepository(ctrl *gomock.Controller) *MockAuthRepository {
	mock := &MockAuthRepository{ctrl: ctrl}
	mock.recorder = &MockAuthRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthRepository) EXPECT() *MockAuthRepositoryMockRecorder {
	return m.recorder
}

// AddJWT mocks base method.
func (m *MockAuthRepository) AddJWT(ctx context.Context, Token, UserID string, IssuedAt, ExpiresAt time.Time) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddJWT", ctx, Token, UserID, IssuedAt, ExpiresAt)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddJWT indicates an expected call of AddJWT.
func (mr *MockAuthRepositoryMockRecorder) AddJWT(ctx, Token, UserID, IssuedAt, ExpiresAt any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddJWT", reflect.TypeOf((*MockAuthRepository)(nil).AddJWT), ctx, Token, UserID, IssuedAt, ExpiresAt)
}

// ValidateJWT mocks base method.
func (m *MockAuthRepository) ValidateJWT(ctx context.Context, Token string, ExpiresAt time.Time) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateJWT", ctx, Token, ExpiresAt)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateJWT indicates an expected call of ValidateJWT.
func (mr *MockAuthRepositoryMockRecorder) ValidateJWT(ctx, Token, ExpiresAt any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateJWT", reflect.TypeOf((*MockAuthRepository)(nil).ValidateJWT), ctx, Token, ExpiresAt)
}
